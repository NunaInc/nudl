
def f(x: Function<{X}, X>, val: {X}) => x(val)
def g(x: Int, y: Int = 1) => x + y
def h(x: Int) => f(g, x)

/*
def foo(x: Int) => {
  if (x % 2) {
    return x / 2
  }
  // Need an error here
}

def foo(x: Int) => {
  if (x % 2) {
    x = x + 1
  } else {
    return x
  }
  // Need an error here
}

def foo(x: Int) => {
  return x / 2
  // Need an error here:
  x = x + 1
}

def foo(x: Int) => {
  if (x % 2) {
    y = 10
  }
  // Need an error here - ie scopes per if expression.
  y + x
}
*/
