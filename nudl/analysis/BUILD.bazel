#
# Copyright 2022 Nuna inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
package(default_visibility = ["//visibility:private"])

load("//external/cpplint:cpplint.bzl", "cpplint")

cc_library(
    name = "analysis",
    srcs = [
        "errors.cc",
        "expression.cc",
        "function.cc",
        "module.cc",
        "named_object.cc",
        "names.cc",
        "pragma.cc",
        "scope.cc",
        "type_spec.cc",
        "type_store.cc",
        "type_utils.cc",
        "types.cc",
        "vars.cc",
    ],
    hdrs = [
        "analysis.h",
        "errors.h",
        "expression.h",
        "function.h",
        "module.h",
        "named_object.h",
        "names.h",
        "pragma.h",
        "scope.h",
        "type_spec.h",
        "type_store.h",
        "type_utils.h",
        "types.h",
        "vars.h",
    ],
    linkopts = select({
        # TODO(catalin): Note the compiler constraints do not work for
        # some reason - relaying to OS constraints - kind of stupid,
        # but for now they work.
        "//:osx": [],
        "//:linux": ["-lstdc++fs"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//nudl/grammar",
        "//nudl/proto:analysis_cc",
        "//nudl/proto:dsl_cc",
        "//nudl/status",
        "//nudl/testing:stacktrace",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/cleanup",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
        "@com_google_absl//absl/types:variant",
        "@com_googlesource_code_re2//:re2",
    ],
)

cpplint()
